Elm.Blog = Elm.Blog || {};
Elm.Blog.make = function (_elm) {
   "use strict";
   _elm.Blog = _elm.Blog || {};
   if (_elm.Blog.values) return _elm.Blog.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var helloStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-size",_1: "50px"}]));
   var view = F2(function (address,model) {    return A2($Html.div,_U.list([]),_U.list([$Html.text($Basics.toString(model))]));});
   var update = F2(function (action,model) {    var _p0 = action;if (_p0.ctor === "NoOp") {    return model;} else {    return model + 1;}});
   var Add = {ctor: "Add"};
   var NoOp = {ctor: "NoOp"};
   return _elm.Blog.values = {_op: _op,NoOp: NoOp,Add: Add,update: update,view: view,helloStyle: helloStyle};
};